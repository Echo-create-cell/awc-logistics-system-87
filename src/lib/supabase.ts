import { createClient } from '@supabase/supabase-js';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL!;
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY!;

export const supabase = createClient(supabaseUrl, supabaseAnonKey);

export type Database = {
  public: {
    Tables: {
      quotations: {
        Row: {
          id: string;
          client_id: string | null;
          client_name: string | null;
          volume: string;
          buy_rate: number;
          currency: string;
          client_quote: number;
          profit: number;
          profit_percentage: string;
          quote_sent_by: string;
          status: 'pending' | 'won' | 'lost';
          follow_up_date: string;
          remarks: string;
          created_at: string;
          approved_by: string | null;
          approved_at: string | null;
          destination: string | null;
          door_delivery: string | null;
          linked_invoice_ids: string[] | null;
          freight_mode: string | null;
          cargo_description: string | null;
          request_type: string | null;
          country_of_origin: string | null;
          total_volume_kg: number | null;
        };
        Insert: {
          id?: string;
          client_id?: string | null;
          client_name?: string | null;
          volume: string;
          buy_rate: number;
          currency: string;
          client_quote: number;
          profit: number;
          profit_percentage: string;
          quote_sent_by: string;
          status?: 'pending' | 'won' | 'lost';
          follow_up_date: string;
          remarks: string;
          created_at?: string;
          approved_by?: string | null;
          approved_at?: string | null;
          destination?: string | null;
          door_delivery?: string | null;
          linked_invoice_ids?: string[] | null;
          freight_mode?: string | null;
          cargo_description?: string | null;
          request_type?: string | null;
          country_of_origin?: string | null;
          total_volume_kg?: number | null;
        };
        Update: {
          id?: string;
          client_id?: string | null;
          client_name?: string | null;
          volume?: string;
          buy_rate?: number;
          currency?: string;
          client_quote?: number;
          profit?: number;
          profit_percentage?: string;
          quote_sent_by?: string;
          status?: 'pending' | 'won' | 'lost';
          follow_up_date?: string;
          remarks?: string;
          created_at?: string;
          approved_by?: string | null;
          approved_at?: string | null;
          destination?: string | null;
          door_delivery?: string | null;
          linked_invoice_ids?: string[] | null;
          freight_mode?: string | null;
          cargo_description?: string | null;
          request_type?: string | null;
          country_of_origin?: string | null;
          total_volume_kg?: number | null;
        };
      };
      invoices: {
        Row: {
          id: string;
          invoice_number: string;
          quotation_id: string;
          client_name: string;
          client_address: string;
          client_contact_person: string;
          client_tin: string;
          destination: string;
          door_delivery: string;
          salesperson: string;
          deliver_date: string;
          payment_conditions: string;
          validity_date: string;
          awb_number: string;
          items: any;
          sub_total: number;
          tva: number;
          total_amount: number;
          currency: string;
          issue_date: string;
          due_date: string;
          status: 'pending' | 'paid' | 'overdue';
          created_by: string;
          created_at: string;
        };
        Insert: {
          id?: string;
          invoice_number: string;
          quotation_id: string;
          client_name: string;
          client_address: string;
          client_contact_person: string;
          client_tin: string;
          destination: string;
          door_delivery: string;
          salesperson: string;
          deliver_date: string;
          payment_conditions: string;
          validity_date: string;
          awb_number: string;
          items: any;
          sub_total: number;
          tva: number;
          total_amount: number;
          currency: string;
          issue_date: string;
          due_date: string;
          status?: 'pending' | 'paid' | 'overdue';
          created_by: string;
          created_at?: string;
        };
        Update: {
          id?: string;
          invoice_number?: string;
          quotation_id?: string;
          client_name?: string;
          client_address?: string;
          client_contact_person?: string;
          client_tin?: string;
          destination?: string;
          door_delivery?: string;
          salesperson?: string;
          deliver_date?: string;
          payment_conditions?: string;
          validity_date?: string;
          awb_number?: string;
          items?: any;
          sub_total?: number;
          tva?: number;
          total_amount?: number;
          currency?: string;
          issue_date?: string;
          due_date?: string;
          status?: 'pending' | 'paid' | 'overdue';
          created_by?: string;
          created_at?: string;
        };
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
    Enums: {
      [_ in never]: never;
    };
  };
};