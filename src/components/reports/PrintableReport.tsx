
import React from 'react';
import { ProfessionalLogo } from '@/components/ui/professional-logo';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { ReportData } from '@/types/reports';
import { format } from 'date-fns';

interface PrintableReportProps {
  reportData: ReportData;
  userRole: string;
  userName: string;
}

const PrintableReport = ({ reportData, userRole, userName }: PrintableReportProps) => {
  const formatCurrency = (amount: number) => `$${amount.toLocaleString('en-US', { minimumFractionDigits: 2 })}`;
  const formatPercentage = (value: number) => `${value.toFixed(1)}%`;

  return (
    <div className="bg-white text-black p-8 max-w-4xl mx-auto print:p-0 print:max-w-none">
      {/* Header */}
      <div className="flex items-center justify-between mb-8 border-b pb-4">
        <div className="flex items-center space-x-4">
          <ProfessionalLogo 
            size="lg" 
            variant="header" 
            showGlow 
            className="opacity-90" 
          />
          <div>
            <h1 className="text-2xl font-bold text-gray-900">AWC Logistics</h1>
            <p className="text-gray-600">Financial Report</p>
          </div>
        </div>
        <div className="text-right">
          <p className="text-sm text-gray-600">Generated by: {userName}</p>
          <p className="text-sm text-gray-600">Role: {userRole.replace('_', ' ')}</p>
          <p className="text-sm text-gray-600">Date: {format(new Date(), 'PPP')}</p>
        </div>
      </div>

      {/* Report Period */}
      <div className="mb-6">
        <h2 className="text-lg font-semibold mb-2">Report Period</h2>
        <p className="text-gray-700">
          From: {format(reportData.dateRange.from, 'PPP')} to {format(reportData.dateRange.to, 'PPP')}
        </p>
      </div>

      {/* Financial Summary */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle>Financial Summary</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center p-4 bg-green-50 rounded-lg">
              <p className="text-sm text-gray-600">Total Revenue</p>
              <p className="text-xl font-bold text-green-600">{formatCurrency(reportData.metrics.totalRevenue)}</p>
            </div>
            <div className="text-center p-4 bg-blue-50 rounded-lg">
              <p className="text-sm text-gray-600">Total Profit</p>
              <p className="text-xl font-bold text-blue-600">{formatCurrency(reportData.metrics.totalProfit)}</p>
            </div>
            <div className="text-center p-4 bg-red-50 rounded-lg">
              <p className="text-sm text-gray-600">Total Losses</p>
              <p className="text-xl font-bold text-red-600">{formatCurrency(reportData.metrics.totalLoss)}</p>
            </div>
            <div className="text-center p-4 bg-purple-50 rounded-lg">
              <p className="text-sm text-gray-600">Win Rate</p>
              <p className="text-xl font-bold text-purple-600">{formatPercentage(reportData.metrics.winRate)}</p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Invoice Statistics */}
      <Card className="mb-6">
        <CardHeader>
          <CardTitle>Invoice Statistics</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div>
              <p className="text-sm text-gray-600">Total Invoices</p>
              <p className="text-lg font-semibold">{reportData.metrics.totalInvoices}</p>
            </div>
            <div>
              <p className="text-sm text-gray-600">Paid Invoices</p>
              <p className="text-lg font-semibold text-green-600">{reportData.metrics.paidInvoices}</p>
            </div>
            <div>
              <p className="text-sm text-gray-600">Pending Invoices</p>
              <p className="text-lg font-semibold text-yellow-600">{reportData.metrics.pendingInvoices}</p>
            </div>
            <div>
              <p className="text-sm text-gray-600">Overdue Invoices</p>
              <p className="text-lg font-semibold text-red-600">{reportData.metrics.overdueInvoices}</p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Top Clients */}
      {reportData.topClients.length > 0 && (
        <Card className="mb-6">
          <CardHeader>
            <CardTitle>Top Clients by Revenue</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-2">
              {reportData.topClients.slice(0, 10).map((client, index) => (
                <div key={client.name} className="flex justify-between items-center p-2 bg-gray-50 rounded">
                  <div className="flex items-center space-x-2">
                    <span className="w-6 h-6 bg-blue-500 text-white text-xs flex items-center justify-center rounded-full">
                      {index + 1}
                    </span>
                    <span className="font-medium">{client.name}</span>
                  </div>
                  <div className="text-right">
                    <p className="font-semibold">{formatCurrency(client.revenue)}</p>
                    <p className="text-xs text-gray-600">{client.quotations} quotation{client.quotations > 1 ? 's' : ''}</p>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      )}

      {/* Monthly Trends */}
      {reportData.monthlyTrends.length > 0 && (
        <Card className="mb-6">
          <CardHeader>
            <CardTitle>Monthly Performance</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="w-full border-collapse border border-gray-200">
                <thead>
                  <tr className="bg-gray-50">
                    <th className="border border-gray-200 p-2 text-left">Month</th>
                    <th className="border border-gray-200 p-2 text-right">Revenue</th>
                    <th className="border border-gray-200 p-2 text-right">Profit</th>
                    <th className="border border-gray-200 p-2 text-right">Quotations</th>
                  </tr>
                </thead>
                <tbody>
                  {reportData.monthlyTrends.map((trend) => (
                    <tr key={trend.month}>
                      <td className="border border-gray-200 p-2">{trend.month}</td>
                      <td className="border border-gray-200 p-2 text-right">{formatCurrency(trend.revenue)}</td>
                      <td className="border border-gray-200 p-2 text-right">{formatCurrency(trend.profit)}</td>
                      <td className="border border-gray-200 p-2 text-right">{trend.quotations}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      )}

      {/* User Activities (Admin only) */}
      {(userRole === 'admin' || userRole === 'sales_director' || userRole === 'finance_officer') && reportData.userActivities.length > 0 && (
        <Card className="mb-6">
          <CardHeader>
            <CardTitle>User Performance Summary</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="overflow-x-auto">
              <table className="w-full border-collapse border border-gray-200">
                <thead>
                  <tr className="bg-gray-50">
                    <th className="border border-gray-200 p-2 text-left">User</th>
                    <th className="border border-gray-200 p-2 text-right">Quotations</th>
                    <th className="border border-gray-200 p-2 text-right">Won</th>
                    <th className="border border-gray-200 p-2 text-right">Win Rate</th>
                    <th className="border border-gray-200 p-2 text-right">Total Profit</th>
                    <th className="border border-gray-200 p-2 text-right">Revenue</th>
                  </tr>
                </thead>
                <tbody>
                  {reportData.userActivities.map((activity) => (
                    <tr key={activity.userId}>
                      <td className="border border-gray-200 p-2">{activity.userName}</td>
                      <td className="border border-gray-200 p-2 text-right">{activity.quotationsCreated}</td>
                      <td className="border border-gray-200 p-2 text-right">{activity.quotationsWon}</td>
                      <td className="border border-gray-200 p-2 text-right">{formatPercentage(activity.winRate)}</td>
                      <td className="border border-gray-200 p-2 text-right">{formatCurrency(activity.totalProfit)}</td>
                      <td className="border border-gray-200 p-2 text-right">{formatCurrency(activity.totalRevenue)}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>
          </CardContent>
        </Card>
      )}

      {/* Footer */}
      <div className="border-t pt-4 mt-8 text-center text-sm text-gray-600">
        <p>This report was generated automatically by AWC Logistics Management System</p>
        <p>Â© {new Date().getFullYear()} AWC Logistics. All rights reserved.</p>
      </div>
    </div>
  );
};

export default PrintableReport;
